num_mut_ind[mutations_ind]<-num_mut_ind[mutations_ind]+1
num_mut_ind
benefit_prob<-runif(length(mutations_ind), 0, 1)
benefit_prob
for (i in seq(1,length(mutations_ind))){
if (benefit_prob[i]<=trait_change){
trait_i[mutations_ind[i]]<-trait_i[mutations_ind[i]]-2
benefit_mut_count<-benefit_mut_count+1
}
}
if (pop_i*2<max_pop){
pop_i<-c(pop_i*2)
trait_i<-c(trait_i,trait_i)
num_mut_ind<-c(num_mut_ind,num_mut_ind)
}
if (pop_i*2>max_pop){
pop_i<-pop_i*2
trait_i<-c(trait_i,trait_i)
num_mut_ind<-c(num_mut_ind,num_mut_ind)
max_sel<-round(runif(max_pop, 1, pop_i))
pop_i<-max_pop
trait_i<-trait_i[max_sel]
num_mut_ind<-num_mut_ind[max_sel]
}
}
benefit_mut_count
rm(list=ls(all=TRUE))
pop_i<-1000
max_pop<-15000000000
trait_change<-0.01
trait_i<-rnorm(pop_i, mean=10, sd=3)
hist(trait_i,freq=FALSE,nclass=100)
t<-seq(0,250)
num_mut_ind<-rep(0,pop_i)
benefit_mut_count<-c()
for (i in seq(1,length(t))){
mutations_ind<-round(runif((mut_rate*pop_i/100), 1, pop_i))
mutations_ind
num_mut_ind[mutations_ind]<-num_mut_ind[mutations_ind]+1
num_mut_ind
benefit_prob<-runif(length(mutations_ind), 0, 1)
benefit_prob
for (i in seq(1,length(mutations_ind))){
if (benefit_prob[i]<=trait_change){
trait_i[mutations_ind[i]]<-trait_i[mutations_ind[i]]-2
t_final<-250
mut_rate<-2
benefit_mut_count<-benefit_mut_count+1
}
}
if (pop_i*2<max_pop){
pop_i<-c(pop_i*2)
trait_i<-c(trait_i,trait_i)
num_mut_ind<-c(num_mut_ind,num_mut_ind)
}
if (pop_i*2>max_pop){
pop_i<-pop_i*2
trait_i<-c(trait_i,trait_i)
num_mut_ind<-c(num_mut_ind,num_mut_ind)
max_sel<-round(runif(max_pop, 1, pop_i))
pop_i<-max_pop
trait_i<-trait_i[max_sel]
num_mut_ind<-num_mut_ind[max_sel]
}
}
rm(list=ls(all=TRUE))
pop_i<-1000
mut_rate<-2
max_pop<-15000000000
t_final<-250
trait_change<-0.01
trait_i<-rnorm(pop_i, mean=10, sd=3)
hist(trait_i,freq=FALSE,nclass=100)
t<-seq(0,250)
num_mut_ind<-rep(0,pop_i)
benefit_mut_count<-c()
for (i in seq(1,length(t))){
mutations_ind<-round(runif((mut_rate*pop_i/100), 1, pop_i))
mutations_ind
num_mut_ind[mutations_ind]<-num_mut_ind[mutations_ind]+1
num_mut_ind
benefit_prob<-runif(length(mutations_ind), 0, 1)
benefit_prob
for (i in seq(1,length(mutations_ind))){
if (benefit_prob[i]<=trait_change){
trait_i[mutations_ind[i]]<-trait_i[mutations_ind[i]]-2
benefit_mut_count<-benefit_mut_count+1
}
}
if (pop_i*2<max_pop){
pop_i<-c(pop_i*2)
trait_i<-c(trait_i,trait_i)
num_mut_ind<-c(num_mut_ind,num_mut_ind)
}
if (pop_i*2>max_pop){
pop_i<-pop_i*2
trait_i<-c(trait_i,trait_i)
num_mut_ind<-c(num_mut_ind,num_mut_ind)
max_sel<-round(runif(max_pop, 1, pop_i))
pop_i<-max_pop
trait_i<-trait_i[max_sel]
num_mut_ind<-num_mut_ind[max_sel]
}
}
rm(list=ls(all=TRUE))
rm(list=ls(all=TRUE))
pop_i<-1000
selectio_step<-seq(1,250,7)
selectio_step<-seq(7,250,7)
selectio_step<-seq(7,250,7)
rm(list=ls(all=TRUE))
pop_i<-1000
mut_rate<-2
max_pop<-15000000000
t_final<-250
trait_change<-0.01
trait_i<-rnorm(pop_i, mean=10, sd=3)
hist(trait_i,freq=FALSE,nclass=100)
data<-hist(trait_i,freq=FALSE,nclass=100)
data
rm(list=ls(all=TRUE))
pop_i<-1000
mut_rate<-2
max_pop<-15000000000
t_final<-250
trait_change<-0.01
trait_i<-rnorm(pop_i, mean=10, sd=2)
data<-hist(trait_i,freq=FALSE,nclass=100)
data
trait_i<-rnorm(pop_i, mean=10, sd=1)
data<-hist(trait_i,freq=FALSE,nclass=100)
data
trait_i<-rnorm(pop_i, mean=10, sd=0.2)
data<-hist(trait_i,freq=FALSE,nclass=100)
trait_i<-rnorm(pop_i, mean=10, sd=0.5)
data<-hist(trait_i,freq=FALSE,nclass=100)
data
trait_i<-rnorm(pop_i, mean=10, sd=0.8)
data<-hist(trait_i,freq=FALSE,nclass=100)
data
hist(trait_i,freq=FALSE,nclass=100)$breaks
data
pop_i<-1000
trait_i<-rnorm(pop_i, mean=10, sd=0.8)
data<-hist(trait_i,freq=FALSE,nclass=100)
max_pop<-15000000000
max_pop<-10000
maxN <- function(x, N=2){
len <- length(x)
if(N>len){
warning('N greater than length(x).  Setting N=length(x)')
N <- length(x)
}
sort(x,partial=len-N+1)[len-N+1]
}
maxN(1:10)
maxN(1:10, c(1,2))
maxN(1:10, c(1,2,3))
maxN(1:10, c(1,3))
maxN(c(3,4,6,6,7,8,10,2,15,10), c(1,3))
maxN(c(3,4,6,6,7,8,19,2,15,10), c(1,3))
maxN(c(3,4,6,6,7,8,19,2,15,10), c(1,2))
maxN(c(3,4,6,6,7,8,2,15.2,10.1), c(1,2))
x=c(3,4,6,6,7,8,2,15.2,10.1)
which(x==maxN(c(3,4,6,6,7,8,2,15.2,10.1), c(1,2)))
maxN(x, c(1,2))
which(x==y)
y<-maxN(x, c(1,2))
which(x==y)
which(x==4)
which(x==c(4,6)
which(x==c(4,6))
which(y %in% x)
data<-hist(trait_i,freq=FALSE,nclass=100)
total_pro<-c(0)
total_pro<-c(0)
for (i in seq(1,length(trait_i)){
for (i in seq(1,length(trait_i))){
new_pro<-(-e^(trait_i[i]-min(trait_i)))
total_pro<-total_pro+new_pro
}
total_pro<-c(0)
for (i in seq(1,length(trait_i))){
new_pro<-(-exp^(trait_i[i]-min(trait_i)))
total_pro<-total_pro+new_pro
}
trait_i<-rnorm(pop_i, mean=10, sd=0.8)
total_pro<-c(0)
for (i in seq(1,length(trait_i))){
new_pro<-(exp^(trait_i[i]-min(trait_i)))*-1
total_pro<-total_pro+new_pro
}
min(trait_i)
trait_i[1]
trait_i[1]-min(trait_i)
exp^(trait_i[1]-min(trait_i))
exp(1)^(trait_i[1]-min(trait_i))
total_pro<-c(0)
for (i in seq(1,length(trait_i))){
new_pro<-(exp(1)^(trait_i[i]-min(trait_i)))*-1
total_pro<-total_pro+new_pro
}
exp(1)^(trait_i[1]-min(trait_i))
-exp(1)^(trait_i[1]-min(trait_i))
-exp(1)^0
exp(1)^0
exp(1)^-(trait_i[1]-min(trait_i))
total_pro<-c(0)
for (i in seq(1,length(trait_i))){
new_pro<-(exp(1)^-(trait_i[i]-min(trait_i)))
total_pro<-total_pro+new_pro
}
Pro_selection<-(1000*(-exp(1)^-(trait_i-min(trait_i))))/(pop_i*total_pro)
Pro_selection<-(1000*(exp(1)^-(trait_i-min(trait_i))))/(pop_i*total_pro)
y<-maxN(Pro_selection, seq(1,50))
which(y %in% x)
which(y %in% Pro_selection)
rm(list=ls(all=TRUE))
pop_i<-1000
mut_rate<-2
max_pop<-150000
t_final<-250
trait_change<-0.01
trait_i<-rnorm(pop_i, mean=10, sd=0.8)
data<-hist(trait_i,freq=FALSE,nclass=100)
data
hist(trait_i,freq=FALSE,nclass=100)$breaks
t<-seq(0,t_final)
num_mut_ind<-rep(0,pop_i)
selectio_step<-seq(7,250,7)
maxN <- function(x, N=2){
len <- length(x)
if(N>len){
warning('N greater than length(x).  Setting N=length(x)')
N <- length(x)
}
sort(x,partial=len-N+1)[len-N+1]
}
benefit_mut_count<-c()
for (i in seq(1,length(t))){
if(i %in% selectio_step){
total_pro<-c(0)
for (i in seq(1,length(trait_i))){
new_pro<-(exp(1)^-(trait_i[i]-min(trait_i)))
total_pro<-total_pro+new_pro
}
Pro_selection<-(1000*(exp(1)^-(trait_i-min(trait_i))))/(pop_i*total_pro)
y<-maxN(Pro_selection, seq(1,100))
which(y %in% Pro_selection)
pop_i<-1000
trait_i<-trait_i[which(y %in% Pro_selection)]
num_mut_ind<-num_mut_ind[which(y %in% Pro_selection)]
}
mutations_ind<-round(runif((mut_rate*pop_i/100), 1, pop_i))
mutations_ind
num_mut_ind[mutations_ind]<-num_mut_ind[mutations_ind]+1
num_mut_ind
benefit_prob<-runif(length(mutations_ind), 0, 1)
benefit_prob
for (i in seq(1,length(mutations_ind))){
if (benefit_prob[i]<=trait_change){
trait_i[mutations_ind[i]]<-trait_i[mutations_ind[i]]-2
benefit_mut_count<-benefit_mut_count+1
}
}
if (pop_i*2<max_pop){
pop_i<-c(pop_i*2)
trait_i<-c(trait_i,trait_i)
num_mut_ind<-c(num_mut_ind,num_mut_ind)
}
if (pop_i*2>max_pop){
pop_i<-pop_i*2
trait_i<-c(trait_i,trait_i)
num_mut_ind<-c(num_mut_ind,num_mut_ind)
max_sel<-round(runif(max_pop, 1, pop_i))
pop_i<-max_pop
trait_i<-trait_i[max_sel]
num_mut_ind<-num_mut_ind[max_sel]
}
}
source('C:/Users/SITG/Desktop/Model_cell.R', echo=TRUE)
source('C:/Users/SITG/Desktop/Model_cell.R', echo=TRUE)
benefit_mut_count
source('C:/Users/SITG/Desktop/Model_cell.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
hist(trait_i)
hist(trait_i,freq=FALSE,nclass=100)
source('C:/Users/SITG/Desktop/Model_cell.R', echo=TRUE)
plot(population_size)
selectio_step
source('C:/Users/SITG/Desktop/Model_cell.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
benefit_mut_count
hist(num_mut_ind)
hist(trait_i,freq=FALSE,nclass=100)
y
source('~/.active-rstudio-document', echo=TRUE)
benefit_mut_count
hist(num_mut_ind)
hist(trait_i,freq=FALSE,nclass=100)
plot(population_size)
benefit_prob
source('~/.active-rstudio-document', echo=TRUE)
benefit_mut_count
hist(num_mut_ind)
hist(trait_i,freq=FALSE,nclass=100)
plot(population_size)
benefit_prob
num_mut_ind
mutations_ind
benefit_prob
source('~/.active-rstudio-document', echo=TRUE)
mutations_ind
benefit_mut_count
source('~/.active-rstudio-document', echo=TRUE)
benefit_mut_count
hist(trait_i,freq=FALSE,nclass=100)
source('~/.active-rstudio-document', echo=TRUE)
hist(num_mut_ind)
hist(trait_i,freq=FALSE,nclass=100)
benefit_mut_count
source('C:/Users/SITG/Desktop/Model_cell.R', echo=TRUE)
hist(trait_i,freq=FALSE,nclass=100)
trait_i<-rnorm(pop_i, mean=10, sd=0.8)
hist(trait_i,freq=FALSE,nclass=100)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
benefit_mut_count
hist(num_mut_ind)
hist(num_mut_ind, freq=FALSE,nclass=15)
hist(num_mut_ind, freq=FALSE,nclass=30)
hist(trait_i,freq=FALSE,nclass=100)
hist(num_mut_ind, freq=FALSE,nclass=30)
num_mut_ind=<2
num_mut_ind<3
trait_i[num_mut_ind<3]
length(trait_i)
hist(trait_i[num_mut_ind<3])
hist(trait_i[num_mut_ind>5])
hist(trait_i[num_mut_ind==0])
hist(trait_i[num_mut_ind==1])
hist(trait_i[num_mut_ind==2])
hist(trait_i[num_mut_ind==3])
hist(trait_i[num_mut_ind==0])
source('C:/Users/SITG/Desktop/Model_cell.R', echo=TRUE)
benefit_mut_count
hist(num_mut_ind, freq=FALSE,nclass=30)
hist(trait_i_f,freq=FALSE,nclass=100)
hist(trait_i,freq=FALSE,nclass=100)
plot(population_size)
hist(trait_i[num_mut_ind==0])
hist(trait_i[num_mut_ind==1])
hist(trait_i[num_mut_ind==2])
hist(trait_i[num_mut_ind==3])
hist(trait_i[num_mut_ind==4])
source('~/.active-rstudio-document', echo=TRUE)
hist(trait_i[num_mut_ind==5])
hist(trait_i[num_mut_ind==5])
source('~/.active-rstudio-document', echo=TRUE)
benefit_mut_count
hist(num_mut_ind, freq=FALSE,nclass=30)
source('~/.active-rstudio-document', echo=TRUE)
hist(num_mut_ind, freq=FALSE,nclass=30)
hist(trait_i_f,freq=FALSE,nclass=100)
hist(trait_i,freq=FALSE,nclass=100)
plot(population_size)
length(trait_i)
source('C:/Users/SITG/Desktop/Model_cell.R', echo=TRUE)
benefit_mut_count
hist(num_mut_ind, freq=FALSE,nclass=30)
hist(trait_i_f,freq=FALSE,nclass=100)
hist(trait_i,freq=FALSE,nclass=100)
hist(trait_i_f,freq=FALSE,nclass=100)
hist(trait_i,freq=FALSE,nclass=100)
plot(population_size)
length(trait_i)
install.packages("maps")
install.packages("mapdata")
rm(list=ls(all=TRUE))
setwd("C:/Users/SITG/Dropbox/Uppsala/salmon/Samples\ info")
Ind_data<-read.table("Table_ind_code.txt", T)
head(Ind_data)
str(Ind_data)
Ind_data[,1]<-as.factor(Ind_data[,1])
str(Ind_data)
Ind_data[,3]<-as.factor(Ind_data[,3])
Ind_data[,6]<-as.factor(Ind_data[,6])
str(Ind_data)
Ind_data$Ind_code=="0"
Ind_data<-Ind_data[Ind_data$Ind_code!="0",]
Primer_data<-read.table("Table_primers.txt", T)
head(Primer_data)
str(Primer_data)
Primer_data[,2]<-as.factor(Primer_data[,2])
str(Primer_data)
Tags_data<-read.table("Table_tags.txt", T)
head(Tags_data)
str(Tags_data)
head(Ind_data)
head(Ind_data)
forward_code<-c()
head(Ind_data)
head(Primer_data)
i=1
Ind_data[i,4]
Primer_data[Primer_data$Loc=="DAB",]
Primer_data[Primer_data$Loc==Ind_data[i,4],]
head(Ind_data)
head(Primer_data)
Primer_data[Primer_data$Loc==Ind_data[i,4] & Primer_data$Plate==Ind_data[i,5],]
Primer_data[Primer_data$Loc==as.character(Ind_data[i,4]) & Primer_data$Plate==as.character(Ind_data[i,5]),]
head(Ind_data)
head(Primer_data)
Primer_data[Primer_data$Loc==as.character(Ind_data[i,4]) & Primer_data$Plate==as.character(Ind_data[i,5]) & Primer_data$Col==as.character(Ind_data[i,6]) & Primer_data$Row==as.character(Ind_data[i,7]),]
Primer_data[Primer_data$Loc==as.character(Ind_data[i,4]) & Primer_data$Plate==as.character(Ind_data[i,5]) & Primer_data$Col==as.character(Ind_data[i,6]) & Primer_data$Row==as.character(Ind_data[i,7]),7]
as.character(Primer_data[Primer_data$Loc==as.character(Ind_data[i,4]) & Primer_data$Plate==as.character(Ind_data[i,5]) & Primer_data$Col==as.character(Ind_data[i,6]) & Primer_data$Row==as.character(Ind_data[i,7]),7])
forward_code<-c()
reverse_code<-c()
for (i in seq(1, lenght(Ind_data[,1]))){
forward_code<-c(forward_code,as.character(Primer_data[Primer_data$Loc==as.character(Ind_data[i,4]) & Primer_data$Plate==as.character(Ind_data[i,5]) & Primer_data$Col==as.character(Ind_data[i,6]) & Primer_data$Row==as.character(Ind_data[i,7]),7]))
reverse_code<-c(reverse_code,as.character(Primer_data[Primer_data$Loc==as.character(Ind_data[i,4]) & Primer_data$Plate==as.character(Ind_data[i,5]) & Primer_data$Col==as.character(Ind_data[i,6]) & Primer_data$Row==as.character(Ind_data[i,7]),8]))
}
length(Ind_data[i,4])
forward_code<-c()
reverse_code<-c()
for (i in seq(1, length(Ind_data[,1]))){
forward_code<-c(forward_code,as.character(Primer_data[Primer_data$Loc==as.character(Ind_data[i,4]) & Primer_data$Plate==as.character(Ind_data[i,5]) & Primer_data$Col==as.character(Ind_data[i,6]) & Primer_data$Row==as.character(Ind_data[i,7]),7]))
reverse_code<-c(reverse_code,as.character(Primer_data[Primer_data$Loc==as.character(Ind_data[i,4]) & Primer_data$Plate==as.character(Ind_data[i,5]) & Primer_data$Col==as.character(Ind_data[i,6]) & Primer_data$Row==as.character(Ind_data[i,7]),8]))
}
Ind_data<-as.factor(Ind_data, forward_code=forward_code, reverse_code=reverse_code)
Ind_data<-cbind(Ind_data, forward_code, reverse_code)
head(Ind_data)
head(Primer_data)
head(Tags_data)
str(Ind_data)
head(Ind_data)
head(Tags_data)
sequences<-c(0,0,0)
sequences_R<-c(0,0,0)
sequences_F<-c(0,0,0)
sequences_R<-c(0,0,0)
for (i in seq(1, length(Ind_data[,1]))){
sequences_F<-rbind(sequences_F,as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)]))
sequences_R<-rbind(sequences_R,as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,9]),seq(2,4)]))
}
head(sequences_F)
sequences_F<-c("0","0","0")
sequences_R<-c("0","0","0")
for (i in seq(1, length(Ind_data[,1]))){
sequences_F<-rbind(sequences_F,as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)]))
sequences_R<-rbind(sequences_R,as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,9]),seq(2,4)]))
}
head(sequences_F)
head(sequences_R)
sequences_F<-c("SFRD","SFRD","SFRD")
sequences_R<-c("SFRD","SFRD","SFRD")
for (i in seq(1, length(Ind_data[,1]))){
sequences_F<-rbind(sequences_F,as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)]))
sequences_R<-rbind(sequences_R,as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,9]),seq(2,4)]))
}
head(sequences_F)
head(sequences_R)
sequences_F<-c("SFRD","SFRD","SFRD")
sequences_R<-c("SFRD","SFRD","SFRD")
i=1
as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)]
as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)])
(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)])
c(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)])
as.vector(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)])
sequences_F<-c("SFRD","SFRD","SFRD")
sequences_R<-c("SFRD","SFRD","SFRD")
sequences_F<-rbind(sequences_F,(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)]))
i=1
sequences_F<-rbind(sequences_F,(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)]))
sequences_R<-rbind(sequences_R,(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,9]),seq(2,4)]))
head(sequences_F)
head(sequences_R)
i=2
(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,9]),seq(2,4)])
sequences_R<-rbind(sequences_R,(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)])
)
head(sequences_F)
head(sequences_R)
sequences_F<-c("SFRD","SFRD","SFRD")
sequences_R<-c("SFRD","SFRD","SFRD")
for (i in seq(1, length(Ind_data[,1]))){
sequences_F<-rbind(sequences_F,as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)]))
sequences_R<-rbind(sequences_R,as.character(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,9]),seq(2,4)]))
}
head(sequences_F)
sequences_F<-c("SFRD","SFRD","SFRD")
sequences_R<-c("SFRD","SFRD","SFRD")
for (i in seq(1, length(Ind_data[,1]))){
sequences_F<-rbind(sequences_F,(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,8]),seq(2,4)]))
sequences_R<-rbind(sequences_R,(Tags_data[Tags_data$Locus==as.character(Ind_data[i,4]) & Tags_data$primer==as.character(Ind_data[i,9]),seq(2,4)]))
}
head(sequences_F)
head(sequences_R)
head(sequences_F[-1,])
head(sequences_R[-1,])
sequences_F<-sequences_F[-1,]
sequences_R<-sequences_R[-1,]
Ind_data<-cbind(Ind_data,
w_seq_f=sequences_F[,1], tag_f=sequences_F[,2], locus_seq_f=sequences_F[,3],
w_seq_r=sequences_R[,1], tag_r=sequences_R[,2], locus_seq_r=sequences_R[,3])
head(Ind_data)
write.table(Ind_data, file = "complete_table.txt", append = FALSE, quote = F,
col.names = T, row.names = F)
